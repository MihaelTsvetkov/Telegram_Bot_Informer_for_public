Telegram bot Informer

Основные функции:

•Прием сообщений по HTTPS и отправка в телеграм чаты или пользователям, которые на него подписаны
•Подписка на определенные источники/темы 
Пример: Кнопка “Подписки” -> Доступные источники/темы: source1: topic1, topic2; source2: topic1, topic2
Нажимаете кнопку “Подписаться”
Вводите через /: source1/topic1
Вы подписались на источник тему source1/topic1

Для подписки на все темы одного источника, введите название источника/* .
Пример: source1/*
Вы подписались на все темы источника: source1

Важно! Вводить нужно по указанному в примере стандарту

•Отписка от уже установленных пользователем или чатом источников/тем

•Возможность установить/удалить период времени, в которые сообщения будут отправляться (Пример: Введите время, в которые будут отправляться сообщения.
                                                                                        Вводите через -: 12-17
			                                                                Вы установили время отправки сообщений c 12 по 17)

Важно! Вводить нужно по указанному в примере стандарту. Вводить можно только цифры: от 0 до 23. 24 и больше считается ошибкой


•Возможность установить/удалить количество получаемых сообщений за единицу времени (Пример: Введите частоту отправки сообщений
                                                                                    Вводите через /: 7/минута
                                                                                    Вы установили значение 7/минута)
Важно! Вводить нужно по указанному в примере стандарту, во втором поле поддерживаются единицы времени (минута, час, день, месяц, год). Все остальное будет считаться ошибкой)


•Включение/выключения приема сообщений

•Показ установленных пользователем или чатом настроек (источников/тем, времени, частоты получения сообщений)

Настройка https:
Для работы https вам необходимо создать самоподписанный сертификат ssl:
Для Linux:
    1. Установите openssl с помощью команд:
       apt update
       apt install openssl
    2. Запустите команду генерации ключа:
       openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout (здесь указать путь,
       где будет храниться ключ)/selfsigned.key -out (здесь указать путь,где будет храниться сертификат)/selfsigned.crt
    3. Заполните появившиеся поля данными о сервере, которые будут отображаться в сертификате.
       Самой важной строкой является Common Name (введите FQDN или свое имя). Как правило, в эту строку вносят
       доменное имя, с которым нужно связать сервер. В случае если доменного имени нет, внесите в эту строку
       IP-адрес сервера.
    4. Укажите пути к сертификату и ключу в файле .env

Для Windows 10:
    1. Перейдите по ссылке: https://slproweb.com/products/Win32OpenSSL.html
    2. Скачайте и установите OpenSSL, выбрав разрядность вашей системы
    3. Запустите cmd или powershell от имени админа
    4. Установите путь: ваш диск:\OpenSSL-Win(ваша разрядность)\bin>
    5. Введите первую команду: openssl genrsa -des3 -out server.key.secure 2048
       и придумайте пароль
    6. Введите вторую команду: openssl rsa -in server.key.secure -out server.key
       введите пароль, который вы задали в прошлой команде
    7. Введите третью команду: openssl req -new -key server.key -out server.csr
       Заполните появившиеся поля данными о сервере, которые будут отображаться в сертификате.
       Самой важной строкой является Common Name (введите FQDN или свое имя). Как правило, в эту строку вносят
       доменное имя, с которым нужно связать сервер. В случае если доменного имени нет, внесите в эту строку
       IP-адрес сервера.
    8. Введите последнюю команду: openssl x509 -req -days 9365 -in server.csr -signkey server.key -out server.crt
    9. в пути: ваш диск:\OpenSSL-Win(ваша разрядность)\bin должны появиться несколько файлов, нам пока нжуен только
       server.crt
    10. Откройте файл server.crt и дойдите до пункта хранилище сертификата
    11. Поместите сертификат в доверенные корневые центры сертификации
    12. В файле .env укажите путь к сертификату: server.crt, и ключу: server.key

Важно ! Если вы используйте curl, то для работы с самоподписанным сертификатом перед url нужно поставить -k или
задайте переменную окружения CURL_CA_BUNDLE=путь_к_файлу.crt. Для POST запроса используйте -X [название метода]

Важно ! Если при использовании curl, проверьте, что у вас https, а не http


URL:

URL должен состоять из:
•Токен
•Затем /message
•Параметр source
•Параметр topic
•Параметр message

Пример: /94346491244671238672154452374894423546742348/message?source=soruce1&topic=topic1&message=SomeMessage


Первый запуск:

Бот запускается из файла “http_server”. Настройки хранятся в папке data, файл .env. В файле .env необходимо установить:
•Токен бота
•Токен URL
•Параметры базы данных
•Количество попыток ввода пароля
•Пароль бота

Запуск в телеграме производится через команду /start
После запуска бота, введите пароль. В указанной вами базе данных создаться три таблицы:
send_info, available_subscribes, user_subscribes
Добавьте в таблицу available_subscribes источники/темы, которые будут приходить на ваш сервер. Далее в боте проследуйте по кнопкам: “Сообщения” -> “Подписаться”, выберите источник/тему для подписки.
После подписки на источники/темы проследуйте по кнопкам: “Сообщения” -> “Включить прием сообщений”.
После этого бот начнет присылать вам сообщения по Http с теми источниками/темами, на которые вы подписались.
Установка времени отправки сообщений и количества сообщений на единицу времени находится в разделе “Настройки”
